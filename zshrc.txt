# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=/Users/dean/.oh-my-zsh
DEFAULT_USER=$USER
# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# Function to find user_symbol
if [[ $UID -eq 0 ]]; then
  local user_host='%{$terminfo[bold]$fg[red]%}%n@%m %{$reset_color%}'
  local user_symbol='#';
else
  local user_host='%{$terminfo[bold]$fg[green]%}%n@%m %{$reset_color%}'
  local user_symbol='$';
fi

ZSH_THEME="powerlevel9k/powerlevel9k"
POWERLEVEL9K_MODE="nerdfont-complete"
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="╭─"
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="╰─%B${user_symbol}%b "
# POWERLEVEL9K_CUSTOM_LINUX_ICON="echo "
# POWERLEVEL9K_CUSTOM_LINUX_ICON_BACKGROUND=000
# POWERLEVEL9K_CUSTOM_LINUX_ICON_FOREGROUND=fff
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(command_execution_time user host time)
POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND='black'
POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND='white'
POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=0
POWERLEVEL9K_SHORTEN_STRATEGY="truncate_middle"
POWERLEVEL9K_SHORTEN_DIR_LENGTH=4

# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster"  "bira" "miloshadzic" "mortalscumbag" "tjkirch" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case # sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git ruby rvm brew github node npm virtualenv nvm)

source $ZSH/oh-my-zsh.sh
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source <(doctl completion zsh)
# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

export NVM_DIR="$HOME/.nvm"
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"
  [ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"

export PATH="$HOME/.cargo/bin:$PATH"

export PATH="/usr/local/opt/libpq/bin:$PATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/dean/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/dean/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/dean/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/dean/google-cloud-sdk/completion.zsh.inc'; fi

export PERSONAL_GITHUB_ACCESS_TOKEN=59ff100f27dff59353b1daa18c2bb3e8a7c35e56

alias sk="skaffold"
alias cdt="cd ~/Development/thinkempire/"
alias cdta="cd ~/Development/thinkempire/appterminal/"
alias tapp="code ~/Development/thinkempire/appterminal/empire-appterminal.code-workspace"
alias cdc="cd ~/Development/communitii"
alias tii="code ~/Development/communitii/mobile/"
alias ddd="code ~/Development/dataDepot/ingestionDrivers/dataDepot.code-workspace"
alias kgpp="kubectl get pods --namespace=production"
alias kgps="kubectl get pods --namespace=staging"
alias kgpi="kubectl get pods --namespace=ingestion"

alias kgsp="kubectl get services --namespace=production"
alias kgss="kubectl get services --namespace=staging"
alias kgsi="kubectl get services --namespace=ingestion"

alias kgdp="kubectl get deployments --namespace=production"
alias kgds="kubectl get deployments --namespace=staging"
alias kgdi="kubectl get deployments --namespace=ingestion"

alias kgjp="kubectl get jobs --namespace=production"
alias kgjs="kubectl get jobs --namespace=staging"
alias kgji="kubectl get jobs --namespace=ingestion"

alias kgcp="kubectl get cronjobs --namespace=production"
alias kgcs="kubectl get cronjobs --namespace=staging"
alias kgci="kubectl get cronjobs --namespace=ingestion"

alias klfp="kubectl logs -f --namespace=production"
alias klfs="kubectl logs -f --namespace=staging"
alias klfi="kubectl logs -f --namespace=ingestion"

alias ksdp="kubectl scale deployment --namespace=production"
alias ksds="kubectl scale deployment --namespace=staging"
alias ksdi="kubectl scale deployment --namespace=ingestion"

alias kedp="kubectl edit deployment --namespace=production"
alias keds="kubectl edit deployment --namespace=staging"
alias kedi="kubectl edit deployment --namespace=ingestion"

autoload -U add-zsh-hook
# Zsh hook function
load-nvmrc() {
    local node_version="$(nvm version)"  # Current node version
    local nvmrc_path="$(nvm_find_nvmrc)" # Path to the .nvmrc file

    # Check if there exists a .nvmrc file
    if [ -n "$nvmrc_path" ]; then
        local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

        # Check if the node version in .nvmrc is installed on the computer
        if [ "$nvmrc_node_version" = "N/A" ]; then
            # Install the node version in .nvmrc on the computer and switch to that node version
            nvm install
        # Check if the current node version matches the version in .nvmrc
        elif [ "$nvmrc_node_version" != "$node_version" ]; then
            # Switch node versions
            nvm use
        fi
    # If there isn't an .nvmrc make sure to set the current node version to the default node version
    elif [ "$node_version" != "$(nvm version default)" ]; then
        echo "Reverting to nvm default version"
        nvm use default
    fi
}
# Add the above function when the present working directory (pwd) changes
add-zsh-hook chpwd load-nvmrc
load-nvmrc

